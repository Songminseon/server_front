{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smsun\\\\Desktop\\\\myproject\\\\react_front\\\\react_app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Number from \"./components/Number\";\nimport CountButton from \"./components/CountButton\";\nimport styled from \"styled-components\";\nimport { connect } from 'react-redux';\nimport * as counterActions from './store/reducer';\nimport { bindActionCreators } from 'redux';\nconst Wrapper = styled.div`\n  margin : 0 auto;\n  display : flex;\n  flex-direction : column;\n  align-items : center;\n  width : 100px;\n  margin-top : 100px;\n`;\nconst ButtonWrapper = styled.div`\n  width : 100%;\n  display : flex;\n  justify-content : space-between;\n  margin-bottom : 50px;\n`;\n\nclass App extends React.Component() {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch('https://127.0.0.1:8000/api/');\n      const phone = await res.json();\n      this.setState({\n        phone\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, this.state.phone.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, item.phone))));\n  }\n\n} // const App = ({number, counterActions}) => {\n//     const [phonebook, setPhonebook] = useState(0)\n//     return (\n// \t\t\t<Wrapper>\n//         <ButtonWrapper>\n//           <CountButton onClick={()=>counterActions.increase(number+1)} text=\"+\"/>\n//           <CountButton onClick={()=>counterActions.decrease(number-1)} text=\"-\"/>\n//         </ButtonWrapper>\n//         <Number number={number} />\n//       </Wrapper>\n//     );\n//   }\n// const mapStateToProps = state => ({\n//   number : state.number\n// })\n// const mapDispatchToProps = dispatch => ({\n//   counterActions : bindActionCreators(counterActions, dispatch)\n// })\n// export default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/smsun/Desktop/myproject/react_front/react_app/src/App.js"],"names":["React","useState","useEffect","Number","CountButton","styled","connect","counterActions","bindActionCreators","Wrapper","div","ButtonWrapper","App","Component","state","phone","componentDidMount","res","fetch","json","setState","e","console","log","render","map","item","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;;;;;;;CAA3B;AASA,MAAMC,aAAa,GAAGN,MAAM,CAACK,GAAI;;;;;CAAjC;;AAOA,MAAME,GAAN,SAAkBZ,KAAK,CAACa,SAAN,EAAlB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,KAAK,EAAG;AADF,KADyB;AAAA;;AAKjC,QAAMC,iBAAN,GAAyB;AACvB,QAAG;AACD,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,YAAMH,KAAK,GAAG,MAAME,GAAG,CAACE,IAAJ,EAApB;AACA,WAAKC,QAAL,CAAc;AACZL,QAAAA;AADY,OAAd;AAGD,KAND,CAME,OAAMM,CAAN,EAAQ;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAqBC,IAAI,iBACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,IAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACX,KAAV,CAFF,CADD,CADH,CADF;AAUD;;AA5BgC,C,CA+BnC;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Number from \"./components/Number\";\nimport CountButton from \"./components/CountButton\";\nimport styled from \"styled-components\";\nimport {connect} from 'react-redux';\nimport * as counterActions from './store/reducer';\nimport {bindActionCreators} from 'redux';\n\nconst Wrapper = styled.div`\n  margin : 0 auto;\n  display : flex;\n  flex-direction : column;\n  align-items : center;\n  width : 100px;\n  margin-top : 100px;\n`;\n\nconst ButtonWrapper = styled.div`\n  width : 100%;\n  display : flex;\n  justify-content : space-between;\n  margin-bottom : 50px;\n`;\n\nclass App extends React.Component(){\n  state = {\n    phone : []\n  };\n\n  async componentDidMount(){\n    try{\n      const res = await fetch('https://127.0.0.1:8000/api/');\n      const phone = await res.json();\n      this.setState({\n        phone\n      });\n    } catch(e){\n      console.log(e);\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        {this.state.phone.map(item=>(\n          <div>\n            <h1>{item.name}</h1>\n            <h1>{item.phone}</h1>\n          </div>\n        ))}\n      </div>\n    )\n  }\n\n}\n// const App = ({number, counterActions}) => {\n    \n//     const [phonebook, setPhonebook] = useState(0)\n\n \n\n//     return (\n// \t\t\t<Wrapper>\n//         <ButtonWrapper>\n//           <CountButton onClick={()=>counterActions.increase(number+1)} text=\"+\"/>\n//           <CountButton onClick={()=>counterActions.decrease(number-1)} text=\"-\"/>\n//         </ButtonWrapper>\n//         <Number number={number} />\n//       </Wrapper>\n//     );\n//   }\n\n// const mapStateToProps = state => ({\n//   number : state.number\n// })\n\n// const mapDispatchToProps = dispatch => ({\n//   counterActions : bindActionCreators(counterActions, dispatch)\n// })\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}